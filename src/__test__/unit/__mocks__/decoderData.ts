/**
 * These constants were generated from the response data of real e2e tests.
 * For encrypted requests, the results are decrypted.
 * For each response, the response code and checksum are removed.
 */
import {
  LatticeEncDataSchema,
  LatticeGetAddressesFlag,
} from '../../../protocol';
import { getP256KeyPair } from '../../../util';

export const clientKeyPair = getP256KeyPair(
  Buffer.from(
    '3fb53b677f73e4d2b8c89c303f6f6b349f0075ad88ea126cb9f6632085815dca',
    'hex',
  ),
);

export const decoderTestsFwConstants = JSON.parse(
  '{"extraDataFrameSz":1500,"extraDataMaxFrames":1,"genericSigning":{"baseReqSz":1552,"baseDataSz":1519,"hashTypes":{"NONE":0,"KECCAK256":1,"SHA256":2},"curveTypes":{"SECP256K1":0,"ED25519":1,"BLS12_381_G2":2},"encodingTypes":{"NONE":1,"SOLANA":2,"EVM":4,"ETH_DEPOSIT":5},"calldataDecoding":{"reserved":2895728,"maxSz":1024}},"reqMaxDataSz":1678,"ethMaxGasPrice":20000000000000,"addrFlagsAllowed":true,"ethMaxDataSz":1519,"ethMaxMsgSz":1540,"eip712MaxTypeParams":36,"varAddrPathSzAllowed":true,"eip712Supported":true,"prehashAllowed":true,"ethMsgPreHashAllowed":true,"allowedEthTxTypes":[1,2],"personalSignHeaderSz":72,"kvActionsAllowed":true,"kvKeyMaxStrSz":63,"kvValMaxStrSz":63,"kvActionMaxNum":10,"kvRemoveMaxNum":100,"allowBtcLegacyAndSegwitAddrs":true,"contractDeployKey":"0x08002e0fec8e6acf00835f43c9764f7364fa3f42","abiCategorySz":32,"abiMaxRmv":200,"getAddressFlags":[4,3,5],"maxDecoderBufSz":1600}',
);

export const connectDecoderData = Buffer.from(
  '0104de558941cc182423e1fa6b0ee81b2c17c6203d0c2897929f900480a8b879261993500d7c0bb5b80f75e2ca462681fcaa20d0261775d3204c6ee461c9250ee1d60011000022cfce60cc7995770a9d2c5080351ae2068c71cecb766de54c65053f5662337809baf7d9ddaaafca95180611fb37601c8eebc1d9f967c061edee1511309a70fbe2491a266f84dc5d1c868b6e129170fa3b777ebd9af7c047fd6dff2a8a563cf6b8ea8c6157b33bc5a0614c65369ffc3c4d35537f37f197f9bae12c574b9847174e38c41b0302833ebbd2101237703794',
  'hex',
);

export const getAddressesFlag = LatticeGetAddressesFlag.none;
export const getAddressesDecoderData = Buffer.from(
  '334d32465857534a7569584d4d79737179534d52566e4d655935335141545a664459000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033435757456366725447394441336648376955714562506b6d504c6b5a396d416838000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033384b734472704a3556524553516150364163785072704875554a6d5270397a646800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003351665444387372784a636742685958667557443555505955375146616258476733000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033426a685344394a386b50553648346b52475071614d5a58485a4134726f447a344c
  'hex',
);

export const signGenericRequest = {
  payload: Buffer.from(
    '040000000100050000002c0000803c000080000000800000000000000000004e0001f84b01808447868c0082c35094e242e54155b1abc71fc118065270cecaaf8b776885e8d4a51000a417e914679b7e160613be4f8c2d3203d236286d74eb9192f6d6f71b9118a42bb033ccd8e8c
    'hex',
  ),
  extraDataPayloads: [],
  schema: 5,
  curveType: 0,
  encodingType: 4,
  hashType: 1,
  omitPubkey: false,
  origPayloadBuf: Buffer.from(
    '01f84b01808447868c0082c35094e242e54155b1abc71fc118065270cecaaf8b776885e8d4a51000a417e914679b7e160613be4f8c2d3203d236286d74eb9192f6d6f71b9118a42bb033ccd8e8c0',
    'hex',
  ),
};
export const signGenericDecoderData = Buffer.from(
  '04a50d7d8e5bf6353086dfaff71652a223aa13e02273a2b6bf5a145314b544be1281ac8f78d035874a06b11e3df68e45f7630b2e6ba3be0f51f916fbb6f0a6403930440220640b2c690858ab8d0b9500f9ed64c9aa6b7467b77f1199b061aa96ea780aadaa022048f830f9290dd1b3eaf1922e08a8c992873be1162bd6d5bef681cf911328abe
  'hex',
);

export const signBitcoinRequest = {
  schema: 0,
  // NOTE: This data was tricky to fetch because JSON stringify and buffers don't match well
  origData: {
    prevOuts: [
      {
        txHash: Buffer.from(
          'b2efdbdd3340d2bc547671ce3993a6f05d70343c07578f9d7f5626fdfc06fa35',
          'hex',
        ),
        value: 76800,
        index: 0,
        signerPath: [2147483732, 2147483649, 2147483648, 0, 0],
      },
    ],
    recipient: '2N4gqWT4oqWL2gz9ps92z9fm2Bg3FUkqG7Q',
    value: 70000,
    fee: 4380,
    isSegwit: true,
    changePath: [2147483732, 2147483649, 2147483648, 1, 0],
    fwConstants: decoderTestsFwConstants,
  },
  changeData: { value: 2420 },
  payload: Buffer.from(
    'f00500000054000080010000800000008001000000000000001c110000c47d816ef0a39d6497963ebcf24d05242d51ada74370110100000000000105000000540000800100008000000080000000000000000000000000002c01000000000004b2efdbdd3340d2bc547671ce3993a6f05d70343c07578f9d7f5626fdfc06fa35',
    'hex',
  ),
};

export const signBitcoinDecoderData = Buffer.from(
  '6bb07ddb748b655c8478581af3e128335c16eca0304502210084e356184a7dc1e05a08808cb6da03f9e5d1c37be0f382a761eac2a266a4737f0220172d99b82cf78bf5bb4299e4e663f13e1e4578d144ffeabc474631fb1ac1a4fed423e4c1cc57744a0e7365954e7a632ab272f5d0167337f69227c58e6e2d113e
  'hex',
);

// Uses `decoderTestsFwConstants`
export const getKvRecordsDecoderData = Buffer.from(
  '00000001013f53e5d800000000012b3078333064613364374138363543393334623338396339313963373337353130303534313131414233410000000000000000000000000000000000000000000012546573742041646472657373204e616d
  'hex',
);

export const fetchEncryptedDataRequest = {
  schema: LatticeEncDataSchema.eip2335,
  params: {
    path: [12381, 3600, 0, 0],
    c: 999,
    walletUID: Buffer.from(
      '6ae62c0c96c1e039fc97bfeb7c2428c093fe7f0b6188a434bbac7b652c3e4012',
      'hex',
    ),
  },
};
export const fetchEncryptedDataDecoderData = Buffer.from(
  'a4000000e703000077051b0f03811b1b0bdb48e44977ac70c685312aa6df31c8b3491a9de63b6266f3d76007aba10d19c51ffd031101ac78089c7325d3168d492509735d7f064bfc7f057f2a33451a665c3a8e16dc552e0b1c386f922a80dfd7208ef98afa499dcd2fc5b879b78281c8e5b699904dbbaba690a9a242b1aa0cd4458398c77497200e485f55c16b1e7a3146ac74bff42872d2f76e63689be7066f557e985ebd
  'hex',
);
